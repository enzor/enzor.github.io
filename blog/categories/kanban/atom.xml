<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: kanban | My Blatant Rublings]]></title>
  <link href="http://enzor.github.io/blog/categories/kanban/atom.xml" rel="self"/>
  <link href="http://enzor.github.io/"/>
  <updated>2015-11-22T11:42:29+00:00</updated>
  <id>http://enzor.github.io/</id>
  <author>
    <name><![CDATA[Enzo Rivello]]></name>
    <email><![CDATA[vincenzo.rivello@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[First Steps with Kanban]]></title>
    <link href="http://enzor.github.io/blog/2013/05/14/welcome/"/>
    <updated>2013-05-14T00:10:00+01:00</updated>
    <id>http://enzor.github.io/blog/2013/05/14/welcome</id>
    <content type="html"><![CDATA[<p>In the last period i felt like hitting the roof of my skills, delivering code isn&rsquo;t anymore sufficient, i want to deliver it faster, better (Stronger and harder if possible too).
After a long, hard look, i stumbled upon this excellent book : <em>&ldquo;Kanban blablabla&rdquo;</em> and , oh boys, from a disorganized chaos finally my workflow started to have some sense!
So what was the steps i took to reach an acceptable level?</p>

<ul>
<li>Not acting &ndash; observing : i started taking metrics of EVERYTHING. how many lines of code i am able to produce per day, how many cards i can solve per week , test coverage and your mum</li>
<li>Still don&rsquo;t act &ndash; reflect : analyze the metrics and try to understand any possible bottlenecks: is your work held on by another task by another team or developer? or the task is too big to be resolved within the time-limit, so it needs fragmentation? do you have the necessary skills to accomplish the task or you need training?</li>
<li>Change the world around you &ndash; scrum talk : communication is important and essential, expecially in little-closed team. Why? because in little teams, there is more probability that the tech team will be highly organized and diversified: one back-end programmer, one front-end and another one working as a sysadmin or DevOp: combinations are infinite, still there will be a cultural and professional barrier: back-end programmer would like to see it&rsquo;s features rolled on production while sysadmin would value stability and hold on deploy.  a daily talk on the activity, will bring more understanding of the general situation, while giving anyone the possibility to speak his mind, helping other part of the company or proposing new ideas and point of view. scrum talk is priceless.</li>
<li>Change the world inside you &ndash; organize your work in separate, communicating silos : after understanding the worl around me, i started changing the world inside me. I took up a trello account and started dividing my task in different columns:

<ul>
<li><b>Icebox</b>: everything that i need to do, but i don&rsquo;t have to do it NOW</li>
<li>Dev ready: task is explained, discussed and ready for the dev to pick up</li>
<li>Buffer: list of task ready to go , possibly to do in the week</li>
<li>Work In Progress: task currently i&rsquo;m working on</li>
<li>Testing: tasks currently done, waiting for testing from Q&amp;A or from project management. Many tasks may be here, because a big task may be fragmented into little pieces, thus many different aspects of that task may be in testing at the same time.</li>
<li>Done: Tasks out of the testing phase, waiting for the deploy</li>
<li>Deployed: Task deployed and rolled into production</li>
</ul>
</li>
<li>Take the metrics again, every week &ndash; what changed? : something has changed? in good or bad? in any case why? what happened? how the new system helped the workflow?</li>
</ul>


<p>Personally, since i started this methodology, i observed an increase of 20% in productivity in my own workflow, and i&rsquo;m very tempted to show the results to my managers and adapt the same philosophy to other part of the company! Wish me well!</p>
]]></content>
  </entry>
  
</feed>
